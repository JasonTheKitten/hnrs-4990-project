<% content_for :title, "Browse Topics" %>
<%= stylesheet_link_tag 'contentpage.css' %>
<%= stylesheet_link_tag 'topics/index.css' %>

<div id="page-content">
    <div id="content-header" class="content-tile">
        <h1>Topics</h1>
    </div>

    <div id="content" class="content-tile">
        <h2 class="tile-header">Browse Topics</h2>
        <ul>
            The following topics are currently available:
            <% @topics.each do |topic| %>
                <li>
                    <a href = "./<%= topic.id %>">
                        <%= topic.title %>
                    </a>
                </li>
            <% end %>
        </ul>
        <div id="container"></div>
    </div>

    <div id="content-about" class="content-tile">
        <h2 class="tile-header">About</h2>
        <p>
            This is my Honors 4990 Project.
        </p>
    </div>
</div>

<script type="text/json" id="node-data">
    <%= @topics.map { |topic| 
        {
            id: topic.id,
            title: topic.title,
        }
    }.to_json.html_safe %>
</script>
<script type="text/json" id="link-data">
    <%= @topics.map { |topic|
        topic.prerequisites.map { |prereq|
            {
                source: topic.id,
                target: prereq.id,
            }
        }
    }.flatten.to_json.html_safe %>
</script>
<script type="module">
    const width = 800;
    const height = 600;
    const radius = 60;

    import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";

    const nodes = JSON.parse(document.getElementById("node-data").textContent);
    const links = JSON.parse(document.getElementById("link-data").textContent);

    function textWrap(text, width) {
        text.each(function() {
            let text = d3.select(this);
            let words = text.text().split(/\s+/);
            let base = text.text(null);
            let line = base.append("tspan").text(words.shift());
            while (words.length > 0) {
                let prevText = line.text();
                let word = words.shift();
                line.text(prevText + " " + word)
                    .attr("text-anchor", "middle")
                    .attr("x", width / 2);
                if (line.node().getComputedTextLength() > width * .9) {
                    line.text(prevText);
                    line = base.append("tspan")
                        .text(word)
                        .attr("dy", "1em")
                        .attr("text-anchor", "middle")
                        .attr("x", width / 2);
                }
            }

            text.attr("y", -line.node().getBBox().height / 2);
        })
    }

    function getNodeById(id) {
        return nodes.find(node => node.id === id);
    }

    const svg = d3.create("svg")
        .attr("width", width)
        .attr("height", height);

    const link = svg.selectAll(".link")
        .data(links)
        .join("line")
        .attr("stroke", "#000000")
        .attr("stroke-width", 2);

    const node = svg.selectAll(".node")
        .data(nodes).enter().append("g");

    node.attr("id", d => d.id);

    node.append("circle")
        .attr("r", radius)
        .attr("cx", radius)
        .attr("fill", "#69b3a2");

    let text = node.append("text")
        .text(d => d.title)
        .attr("fill", "#000000")
        .attr("x", radius)
    setTimeout(() => {
        text.call(textWrap, radius * 2);
    }, 0);

    node.append("title")
        .text(d => d.title);

    const simulation = d3.forceSimulation(nodes)
        .force("charge", d3.forceManyBody().strength(-100))
        .force("center", d3.forceCenter(width / 2, height / 2))
        .force("collide", d3.forceCollide(50));
        
    simulation.on("tick", () => {
        node.attr("transform", d => `translate(${d.x},${d.y})`);
        link
            .attr("x1", d => getNodeById(d.source).x + radius)
            .attr("y1", d => getNodeById(d.source).y)
            .attr("x2", d => getNodeById(d.target).x + radius)
            .attr("y2", d => getNodeById(d.target).y);
    });
    
    node.on("mouseover", function() {
        d3.select(this).select("circle").attr("r", radius * 1.75);
    });
    node.on("mouseout", function() {
        d3.select(this).select("circle").attr("r", radius);
    });
    node.on("click", function(d) {
        let id = d3.select(this).node().id;
        window.location.href = `./${id}`;
    });

    document.getElementById("container").appendChild(svg.node());
</script>